// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract SimpleDivision {
    // Function to perform division with basic checks
    function divide(uint256 numerator, uint256 denominator) public pure returns (uint256) {
        // Check that the denominator is not zero using require()
        require(denominator != 0, "Denominator cannot be zero");

        // Perform the division
        uint256 result = numerator / denominator;

        // Check that the result is valid using assert()
        assert(result <= numerator);

        return result;
    }

    // Function to demonstrate the use of revert() statement
    function alwaysFail() public pure {
        // Revert with an error message
        revert("This function always fails");
    }
}
